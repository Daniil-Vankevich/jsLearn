// Флаги и дескрипторы свойств
// Геттеры и сеттеры

// const user = {
// 	name: "Daniil",
// 	age: 20,
// }


// ...................................................................................................................................................
// console.log(Object.getOwnPropertyDescriptor(user, 'name'));

// Object.defineProperties(user, {
// 	name: {
// 		writable: false, // запрещаем изменять
// 		enumerable: false, // запрещаем перечислять в циклах
// 		configurable: false, // запрещаем удалять
// 	},

// 	age: {
// 		writable: false, // запрещаем изменять
// 		enumerable: false, // запрещаем перечислять в циклах
// 		configurable: false, // запрещаем удалять
// 	},

// });

// user.name = "Danya";
// user.age = 21;
// console.log(user);

// for(let key in user) {
// 	console.log(user[key]);
// }

// delete user.name;
// console.log(user);

// ...................................................................................................................................................


// .......................................................................................................................................................................................................................................................

// ........Property когда работаешь с одним свойством,например: name, а если свойств несколько, то надо использовать .Properties..........................

// Object.defineProperty(user, 'name', {
// 	writable: false, // запрещаем изменять
//   enumerable: false, // запрещаем перечислять в циклах
//   configurable: false, // запрещаем удалять
// } );

// .......................................................................................................................................................................................................................................................

const user = {
	name: "Daniil",
	age: 20,
}
// preventExtensions запрещает добавление новых свойств, но при этом можно удалять уже существующие........................................

Object.preventExtensions(user);

user.country = "Russia";

console.log(user);

// Object.seal запрещает как добавление новых свойств, так и удаление уже существующих свойств........................................

Object.seal(user);

user.name = "Danya";

delete user.age;

console.log(user);

// Object.freeze запрещает как добавление новых свойств, так и удаление уже существующих свойств, также нельзя редактировать существующие свойства........................................

Object.freeze(user);

user.name = "Danonchik";

console.log(user);

// Object.isExtensible(user) позволяет узнать можно ли вносить изменения в свойства объекта..............возвращает тру или фолс..........................
// Object.isSealed(user) позволяет узнать можно ли вносить изменения в свойства объекта..............возвращает тру или фолс.......................... тру возвращает если доступ запрещен...............
// Object.isFrozen(user) позволяет узнать можно ли вносить изменения в свойства объекта..............возвращает тру или фолс.......................... тру возвращает если доступ запрещен...............
